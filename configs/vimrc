execute pathogen#infect()

if has("autocmd")
  filetype indent on
  filetype plugin on

  au BufRead,BufNewFile *.god setfiletype ruby

  " Autosave
  " au InsertLeave * if expand('%') != '' | update | endif
  " Remove whitespace
  au BufWritePre * :%s/\s\+$//e
endif

syntax enable
colorscheme simple

" Basic Settings
set backspace=2 " weird backspace issue
set noswapfile
set autoindent
set smartindent
" set foldmethod=syntax
set foldlevelstart=99
set wrap
set nolist
set tabstop=2
set expandtab
set shiftwidth=2
set textwidth=110
set foldcolumn=2
set scrolloff=3
set colorcolumn=+1  " line past textwidth
set ignorecase
set cmdheight=1
set clipboard+=unnamed
set laststatus=2
set ruler
let g:vim_markdown_initial_foldlevel=99
let g:netrw_dirhistmax=0
let NERDSpaceDelims=1
let mapleader = ","
let g:netrw_liststyle=3
let g:ctrlp_show_hidden=1
let g:ctrlp_custom_ignore = { 'dir':  '\v[\/](\.git|bower_components|node_modules|tmp|doc|dist)$' } " or file, link
let g:netrw_banner = 0

" Navigation
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Helpers
map <Leader>r :so $MYVIMRC<CR>
map <Leader>h <C-z>
map <Leader>fj :%!python -m json.tool<CR>
map <space> za
map <Leader>cp :let @+ = expand("%")<CR><CR><Leader>h

" Ruby
map <leader>fr :!bundle exec rubocop -a %<CR>

" RSpec
map <Leader>rf :call RunCurrentSpecFile()<CR>
map <Leader>rl :call RunNearestSpec()<CR>
map <Leader>rr :call RunLastSpec()<CR>
map <Leader>rs :call RunAllSpecs()<CR>
let g:rspec_command = "!bundle exec rspec -fd {spec}"

" Go
let g:go_fmt_command = "goimports"
let g:go_highlight_build_constraints = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_operators = 1
let g:go_highlight_structs = 1
let g:go_highlight_types = 1
let g:deoplete#enable_at_startup = 1

" Keywords
set iskeyword+=\?
set iskeyword+=\!
set iskeyword+=@-@
set iskeyword+=:
set iskeyword+=$
